<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tjm.mapper.BaseMapper">


    <!--Base-->
    <select id="queryBaseByClass" resultType="Base" parameterType="Integer">
        select * from "BASE"
        where "BASE_CLASS"=#{baseClass}
        Order by "BASE_ID"
    </select>

    <select id="queryBaseById" resultType="Base" parameterType="Integer">
        select * from "BASE"
        where "BASE_ID"=#{baseId}
        Order by "BASE_ID"
    </select>

    <select id="queryBaseByName" resultType="Base" parameterType="String">
        select * from "BASE"
        where "BASE_NAME" LIKE #{baseName}
        Order by "BASE_ID"
    </select>

    <insert id="insertBase" parameterType="Base">
        INSERT INTO "TJM"."BASE" ("BASE_NAME", "ZT", "BASE_CLASS", "BASE_TYPE") VALUES (#{base_name}, #{zt}, #{base_class}, #{base_type})
    </insert>

    <delete id="deleteBase" parameterType="Integer">
        DELETE FROM "TJM"."BASE" WHERE "BASE_ID" = #{baseId}
    </delete>

    <select id="queryFunctionPointBase" resultType="Base">
        SELECT * FROM "TJM"."BASE" WHERE BASE_ID IN (SELECT SUPER_ID FROM "TJM"."TREE_BASE_NODE_LV1" WHERE NODE_ID IN
        (SELECT SUPER_ID FROM "TJM"."TREE_BASE_NODE_LV2" WHERE NODE_ID IN
        (SELECT SUPER_ID FROM "TJM"."TREE_BASE_NODE_LV3" WHERE INFO_TABLE='FUNCTION_POINT')
        )
        )
    </select>

    <!--BaseClass-->
    <select id="queryAllBaseClass" resultType="BaseClass">
        SELECT * FROM BASE_CLASS
        ORDER BY CLASS_NUM
    </select>

    <select id="queryBaseClassByClassNum" parameterType="Integer" resultType="BaseClass">
        SELECT * FROM BASE_CLASS WHERE CLASS_NUM=#{classNum}
    </select>

    <insert id="insertBaseClass" parameterType="BaseClass">
        INSERT INTO "TJM"."BASE_CLASS" ("NAME") VALUES (#{name})
    </insert>

    <delete id="deleteBaseClassByClassNum" parameterType="Integer">
        DELETE FROM "TJM"."BASE_CLASS" WHERE CLASS_NUM=#{classNum}
    </delete>

    <!--Security-->
    <select id="querySecurityByBaseId" resultType="BaseSecurity" parameterType="Integer">
        select * from "SECURITY"
        where "BASE_ID"=#{baseId}
        Order by "SECURITY_ID"
    </select>

    <select id="querySecurityById" resultType="BaseSecurity" parameterType="Integer">
        select * from "SECURITY"
        where "SECURITY_ID"=#{securityId}
    </select>

    <select id="querySecurityByLevel" resultType="BaseSecurity">
        select * from "SECURITY"
        where "SECURITY_LEVEL"=#{securityLevel} AND "BASE_ID"=#{baseId}
    </select>

    <insert id="insertSecurity" parameterType="BaseSecurity">
        <selectKey keyProperty="security_id" resultType="Integer" order="AFTER">
            select SECURITYid_sequence.CURRVAL from dual
        </selectKey>
        INSERT INTO "TJM"."SECURITY" ("BASE_ID", "SECURITY_LEVEL") VALUES (#{base_id}, #{security_level})
    </insert>

    <!--Article-->
    <select id="queryArticleList" resultType="BaseArticle">
        select * from "ARTICLE" Order by "ARTICLE_ID"
    </select>

    <select id="queryArticleById" resultType="BaseArticle" parameterType="Integer">
        select * from "ARTICLE"
        where "ARTICLE_ID"=#{articleId}
        Order by "ARTICLE_ID"
    </select>

    <select id="queryArticleByBaseId" resultType="BaseArticle" parameterType="Integer">
        select * from "ARTICLE"
        where "SECURITY_ID" IN (SELECT "SECURITY_ID" FROM "SECURITY" WHERE "BASE_ID"=#{baseId})
        Order by "ARTICLE_ID"
    </select>

    <select id="queryArticleByName" resultType="BaseArticle">
        select * from "ARTICLE"
        where "ARTICLE_NAME"=#{articleName} AND "SECURITY_ID"=#{securityId}
        Order by "ARTICLE_ID"
    </select>

    <insert id="insertArticle" parameterType="BaseArticle">
        <selectKey keyProperty="article_id" resultType="Integer" order="AFTER">
            select ARTICLEid_sequence.CURRVAL from dual
        </selectKey>
        INSERT INTO "TJM"."ARTICLE" ("SECURITY_ID", "ARTICLE_NAME") VALUES (#{security_id}, #{article_name})
    </insert>

    <delete id="deleteArticle" parameterType="BaseArticle">
        DELETE FROM "TJM"."ARTICLE" WHERE "ARTICLE_ID" = #{articleId}
    </delete>


    <!--Point-->
    <select id="queryPointList" resultType="BasePoint">
        select * from "POINT" Order by "POINT_ID"
    </select>

    <select id="queryPointById" resultType="BasePoint" parameterType="Integer">
        select * from "POINT"
        where "POINT_ID"=#{pointId}
        order by "POINT_ID"
    </select>

    <select id="queryPointByArticleId" resultType="BasePoint" parameterType="Integer">
        select * from "POINT"
        where "ARTICLE_ID"=#{articleId}
        Order by "POINT_ID"
    </select>

    <select id="queryPointByBaseId" resultType="BasePoint" parameterType="Integer">
        SELECT * FROM "POINT"
        WHERE "ARTICLE_ID" IN (SELECT "ARTICLE_ID" FROM "ARTICLE" WHERE "SECURITY_ID" IN
        (SELECT "SECURITY_ID" FROM "SECURITY" WHERE "BASE_ID"=#{baseId})
        )
        Order by "POINT_ID"
    </select>

    <select id="queryPointByName" resultType="BasePoint">
        SELECT * FROM "POINT"
        WHERE "POINT_NAME" = #{pointName} AND "ARTICLE_ID" = #{articleId}
        Order by "POINT_ID"
    </select>

    <insert id="insertPoint" parameterType="BasePoint">
        <selectKey keyProperty="point_id" resultType="Integer" order="AFTER">
            select POINTid_sequence.CURRVAL from dual
        </selectKey>
        INSERT INTO "TJM"."POINT" ("ARTICLE_ID", "POINT_NAME") VALUES (#{article_id}, #{point_name})
    </insert>

    <delete id="deletePoint" parameterType="BasePoint">
        DELETE FROM "TJM"."POINT" WHERE "POINT_ID" = #{pointId}
    </delete>


    <!--Item-->
    <select id="queryItemList" resultType="BaseItem">
        select * from "ITEM" Order by "ITEM_ID"
    </select>

    <select id="queryItemById" resultType="BaseItem" parameterType="Integer">
        select * from "TJM"."ITEM"
        where "ITEM_ID"=#{itemId}
        order by "ITEM_ID"
    </select>

    <select id="queryItemByPointId" resultType="BaseItem" parameterType="Integer">
        select * from "ITEM"
        where "POINT_ID"=#{pointId}
        order by "ITEM_ID"
    </select>

    <select id="queryItemByBaseId" resultType="BaseItem" parameterType="Integer">
        SELECT * FROM "ITEM"
        WHERE POINT_ID IN
        (SELECT POINT_ID FROM "POINT" WHERE ARTICLE_ID IN
        (SELECT ARTICLE_ID FROM "ARTICLE" WHERE "SECURITY_ID" IN
        (SELECT "SECURITY_ID" FROM "SECURITY" WHERE "BASE_ID"=#{baseId})
        )
        )
        Order by "ITEM_ID"
    </select>

    <select id="queryItemByInput" resultType="BaseItem">
        SELECT * FROM "ITEM"
        WHERE POINT_ID IN
        (SELECT POINT_ID FROM "POINT" WHERE ARTICLE_ID IN
        (SELECT ARTICLE_ID FROM "ARTICLE" WHERE "SECURITY_ID" IN
        (SELECT "SECURITY_ID" FROM "SECURITY" WHERE "SECURITY_LEVEL" LIKE #{aqjb})
        )
        ) AND DX LIKE #{dx} AND NR LIKE #{nr}
        Order by "ITEM_ID"
    </select>

    <insert id="insertItem" parameterType="BaseItem">
        <selectKey keyProperty="item_id" resultType="Integer" order="AFTER">
            select ITEMid_sequence.CURRVAL from dual
        </selectKey>
        INSERT INTO "TJM"."ITEM" ("POINT_ID", "NR", "DX", "SSBZ", "FXDJ", "SXH") VALUES (#{point_id}, #{nr}, #{dx}, #{ssbz}, #{fxdj}, #{sxh})
    </insert>

    <update id="updateItem" parameterType="BaseItem">
        UPDATE "TJM"."ITEM"
        SET "NR" = #{nr}, "DX" = #{dx}, "SSBZ" = #{ssbz}, "FXDJ" = #{fxdj}, "SXH" = #{sxh}, "ZT" = #{zt}
        WHERE "ITEM_ID" = #{item_id}
    </update>

    <delete id="deleteItem" parameterType="Integer">
        DELETE FROM "TJM"."ITEM" WHERE "ITEM_ID" = #{itemId}
    </delete>

    <!--Indicator-->
    <resultMap id="indicatorToNodeMap" type="Indicator" autoMapping="true">
        <id property="indicatorId" column="NODE_ID"/>
        <result property="indicatorName" column="NODE_NAME"/>
        <result property="indicatorDescription" column="DESCRIPTION"/>
    </resultMap>

    <resultMap id="indicatorResultMap" type="Indicator" autoMapping="true">
        <id property="indicatorId" column="INDICATOR_ID"/>
        <result property="indicatorDescription" column="DESCRIPTION"/>
        <result property="molecular" column="NUMERATOR"/>
        <result property="denominator" column="DENOMINATOR"/>
    </resultMap>

    <select id="query1stIndicatorByBaseName" parameterType="String" resultMap="indicatorToNodeMap">
        SELECT * FROM "TJM"."TREE_BASE_NODE_LV1" WHERE "SUPER_ID" IN
        (SELECT "BASE_ID" AS "SUPER_ID" FROM "BASE" WHERE "BASE_NAME"=#{baseName})
        ORDER BY "NODE_ID"
    </select>

    <select id="query2ndIndicatorBySuperId" parameterType="Integer" resultMap="indicatorToNodeMap">
        SELECT * FROM "TJM"."TREE_BASE_NODE_LV2" WHERE "SUPER_ID"=#{superId}
        ORDER BY "NODE_ID"
    </select>

    <select id="query3rdIndicatorBySuperId" parameterType="Integer" resultMap="indicatorToNodeMap">
        SELECT * FROM "TJM"."TREE_BASE_NODE_LV3" WHERE "SUPER_ID"=#{superId}
        ORDER BY "NODE_ID"
    </select>

    <select id="queryIndicatorById" parameterType="Integer" resultMap="indicatorResultMap">
        SELECT * FROM "TJM"."INDICATOR" WHERE "INDICATOR_ID"=#{indicatorId}
        ORDER BY "INDICATOR_ID"
    </select>

    <update id="updateIndicator" parameterType="Indicator">
        UPDATE "TJM"."INDICATOR"
        SET "NUMERATOR" = #{molecular}, "DENOMINATOR" = #{denominator}, "DESCRIPTION" = #{indicatorDescription}
        WHERE "INDICATOR_ID" = #{indicatorId}
    </update>

    <insert id="insertIndicator" parameterType="Indicator">
        <selectKey keyProperty="indicatorId" resultType="Integer" order="AFTER">
            select INDICATORid_sequence.CURRVAL from dual
        </selectKey>
        INSERT INTO "TJM"."INDICATOR" ("DESCRIPTION", "NUMERATOR", "DENOMINATOR") VALUES (#{indicatorDescription}, #{molecular}, #{denominator})
    </insert>

    <delete id="deleteIndicatorById" parameterType="Integer">
        DELETE FROM "TJM"."INDICATOR" WHERE "INDICATOR_ID"=#{indicatorId}
    </delete>

    <!--FunctionPoint-->
    <select id="queryFunctionPointById" parameterType="Integer" resultType="FunctionPoint">
        SELECT * FROM "TJM"."FUNCTION_POINT" WHERE "FID"=#{fid}
        ORDER BY "FID"
    </select>

    <update id="updateFunctionPoint" parameterType="FunctionPoint">
        UPDATE "TJM"."FUNCTION_POINT"
        SET "SERIAL" = #{serial}, "DESCRIPTION" = #{description}
        WHERE "FID" = #{fid}
    </update>

    <insert id="insertFunctionPoint" parameterType="FunctionPoint">
        <selectKey keyProperty="fid" resultType="Integer" order="AFTER">
            select FUNCPOINTid_sequence.CURRVAL from dual
        </selectKey>
        INSERT INTO "TJM"."FUNCTION_POINT" ("SERIAL", "DESCRIPTION") VALUES (#{serial}, #{description})
    </insert>

    <delete id="deleteFunctionPointById" parameterType="Integer">
        DELETE FROM "TJM"."FUNCTION_POINT" WHERE "FID"=#{fid}
    </delete>

    <!--CheckItem-->
    <select id="queryCheckItemById" parameterType="Integer" resultType="CheckItem">
        SELECT * FROM "TJM"."CHECK_ITEM" WHERE "CID"=#{cid}
        ORDER BY "CID"
    </select>

    <update id="updateCheckItem" parameterType="CheckItem">
        UPDATE "TJM"."CHECK_ITEM"
        SET "SERIAL" = #{serial}, "ADVICE" = #{advice}, "WEIGHT" = #{weight}
        WHERE "CID" = #{cid}
    </update>

    <insert id="insertCheckItem" parameterType="CheckItem">
        <selectKey keyProperty="cid" resultType="Integer" order="AFTER">
            select CHECK_ITEMid_sequence.CURRVAL from dual
        </selectKey>
        INSERT INTO "TJM"."CHECK_ITEM" ("SERIAL", "WEIGHT", "ADVICE") VALUES (#{serial}, #{weight}, #{advice})
    </insert>

    <delete id="deleteCheckItemById" parameterType="Integer">
        DELETE FROM "TJM"."CHECK_ITEM" WHERE "CID"=#{cid}
    </delete>

    <!--BaseNode-->
    <select id="queryNodeLv1ByBaseName" parameterType="String" resultType="BaseNode">
        SELECT * FROM "TJM"."TREE_BASE_NODE_LV1" WHERE "SUPER_ID" IN
        (SELECT "BASE_ID" AS "SUPER_ID" FROM "BASE" WHERE "BASE_NAME"=#{baseName})
        ORDER BY "NODE_ID"
    </select>

    <select id="queryNodeLv2BySuperId" parameterType="Integer" resultType="BaseNode">
        SELECT * FROM "TJM"."TREE_BASE_NODE_LV2" WHERE "SUPER_ID"=#{superId}
        ORDER BY "NODE_ID"
    </select>

    <select id="queryNodeLv3BySuperId" parameterType="Integer" resultType="BaseNode">
        SELECT * FROM "TJM"."TREE_BASE_NODE_LV3" WHERE "SUPER_ID"=#{superId}
        ORDER BY "NODE_ID"
    </select>

    <select id="queryNodeLv3ByInput" parameterType="String" resultType="BaseNode">
        SELECT * FROM "TJM"."TREE_BASE_NODE_LV3" WHERE "NODE_NAME" LIKE #{lv3} AND "SUPER_ID" IN
        (SELECT "NODE_ID" FROM "TJM"."TREE_BASE_NODE_LV2" WHERE "NODE_NAME" LIKE #{lv2} AND "SUPER_ID" IN
        (SELECT "NODE_ID" FROM "TJM"."TREE_BASE_NODE_LV1" WHERE NODE_NAME LIKE #{lv1})
        )
        ORDER BY "NODE_ID"
    </select>

    <select id="queryNodeLv2ByInput" parameterType="String" resultType="BaseNode">
        SELECT * FROM "TJM"."TREE_BASE_NODE_LV2" WHERE "NODE_NAME" LIKE #{lv2} AND "LEAF"=1 AND "SUPER_ID" IN
        (SELECT "NODE_ID" FROM "TJM"."TREE_BASE_NODE_LV1" WHERE NODE_NAME LIKE #{lv1})
        ORDER BY "NODE_ID"
    </select>

    <select id="findSuperNodeByLv3" parameterType="Integer" resultType="BaseNode">
        SELECT * FROM "TJM"."TREE_BASE_NODE_LV2" WHERE "NODE_ID"=#{superId}
    </select>

    <select id="findSuperNodeByLv2" parameterType="Integer" resultType="BaseNode">
        SELECT * FROM "TJM"."TREE_BASE_NODE_LV1" WHERE "NODE_ID"=#{superId}
    </select>

    <select id="queryNodeWithSameSuperId" resultType="BaseNode">
        SELECT * FROM "TJM".TREE_BASE_NODE_LV${level} WHERE "SUPER_ID"=#{superId}
    </select>

    <select id="queryNodeByInfo" resultType="BaseNode">
        SELECT * FROM "TJM".TREE_BASE_NODE_LV${level} WHERE "INFO_TABLE"=#{infoTable} AND "INFO_ID"=#{infoId}
    </select>

    <select id="queryNodeById" resultType="BaseNode">
        SELECT * FROM "TJM".TREE_BASE_NODE_LV${level} WHERE "NODE_ID"=#{nodeId}
    </select>

    <select id="findNodeByNameAndSuperId" resultType="BaseNode">
        SELECT * FROM "TJM".TREE_BASE_NODE_LV${level} WHERE "NODE_NAME" LIKE #{nodeName} AND "SUPER_ID"=#{superId}
    </select>

    <insert id="insertNode">
        INSERT INTO "TJM".TREE_BASE_NODE_LV${level} ("SUPER_ID", "NODE_NAME", "LEAF", "DESCRIPTION", "INFO_TABLE", "INFO_ID") VALUES (#{superId}, #{nodeName}, #{leaf}, #{description}, #{infoTable}, #{infoId})
    </insert>

    <delete id="deleteNodeById">
        DELETE FROM "TJM".TREE_BASE_NODE_LV${level} WHERE "NODE_ID"=#{nodeId}
    </delete>

    <!--BugLibrary-->
    <select id="queryBugLibByBaseName" parameterType="String" resultType="BugLib">
        SELECT * FROM "TJM"."BUG_LIB" WHERE "BASE_ID" IN
        (SELECT BASE_ID FROM "TJM"."BASE" WHERE "BASE_NAME" LIKE #{baseName})
        ORDER BY "BID"
    </select>

    <select id="queryBugLibById" parameterType="Integer" resultType="BugLib">
        SELECT * FROM "TJM"."BUG_LIB" WHERE "BID" = #{bid}
        ORDER BY "BID"
    </select>

    <update id="updateBugLib" parameterType="BugLib">
        UPDATE "TJM"."BUG_LIB"
        SET "PORT"=#{port}, "TYPE"=#{type}, "LEVEL"=#{level}, "CVE_NUM"=#{cve_num}, "BUGTRAQ"=#{bugtraq}, "NAME"=#{name}, "CVSS"=#{cvss}, "INFORMATION"=#{information}, "DESCRIPTION"=#{description}, "SOLUTION"=#{solution}
        WHERE "BID"=#{bid}
    </update>

    <insert id="insertBugLib" parameterType="BugLib">
        INSERT INTO "TJM"."BUG_LIB" ("BID", "PORT", "TYPE", "LEVEL", "CVE_NUM", "BUGTRAQ", "NAME", "INFORMATION", "DESCRIPTION", "SOLUTION", "BASE_ID", "CVSS")
        VALUES (#{bid}, #{port}, #{type}, #{level}, #{cve_num}, #{bugtraq}, #{name}, #{information}, #{description}, #{solution}, #{base_id}, #{cvss})
    </insert>

    <delete id="deleteBugLibById" parameterType="Integer">
        DELETE FROM "TJM"."BUG_LIB" WHERE "BID"=#{bid}
    </delete>
</mapper>